{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/utils/form-utils.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","activateTab","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","$tabToActivate","find","each","idx","tab","$tab","is","removeAttr","attr","onTabChangeWithArrows","event","eventKey","which","$tabsCollection","index","document","activeElement","nextTabIdx","$activeTab","activeTabIdx","lastTabIdx","length","get","focus","trigger","onReady","compareProducts","context","urls","arrangeFocusOnSortBy","$searchForm","$categoryTreeContainer","Url","parse","window","location","href","treeData","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","categoryId","input","type","name","value","append","setTimeout","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","onMinPriceError","onMaxPriceError","minPriceNotEntered","maxPriceNotEntered","onInvalidPrice","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","validationErrorMessages","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","forms","email","test","password","notEmpty","inputTagNames","createPasswordValidationErrorTextObject","empty","confirm","mismatch","invalid","onEmptyPasswordErrorText","onConfirmPasswordErrorText","onMismatchPasswordErrorText","onNotValidPasswordErrorText","classifyForm","formSelector","options","$inputs","join","formFieldClass","__","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","errorText","val","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","setMinMaxPriceValidation","selectors","priceValidationErrorTexts","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","updateCounterNav","counter","$link","urlContext","compare","compareCounter","$compareLink","$checked","map","element","item","product","currentTarget","$clickedCompareLink","checked","indexOf","splice","decrementCounter","showAlertModal","addEventListener","localStorage","setItem","$sortBySelector","getItem","removeItem","queryParams","serialize","split","format","pathname","search","buildQueryString","PageManager","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","callback","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","getUrl","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","params","list_all","response","open","updateContent","$items","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","priceRangeValidator","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","assign","constants","VALID","decodeURI","key","parseQueryParams","hasOwnProperty","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","history","replaceState","title"],"mappings":"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","file":"theme-bundle.chunk.14.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\r\nimport CatalogPage from './catalog';\r\nimport FacetedSearch from './common/faceted-search';\r\nimport compareProducts from './global/compare-products';\r\nimport urlUtils from './common/utils/url-utils';\r\nimport Url from 'url';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport 'jstree';\r\nimport nod from './common/nod';\r\n\r\nconst leftArrowKey = 37;\r\nconst rightArrowKey = 39;\r\n\r\nexport default class Search extends CatalogPage {\r\n    formatCategoryTreeForJSTree(node) {\r\n        const nodeData = {\r\n            text: node.data,\r\n            id: node.metadata.id,\r\n            state: {\r\n                selected: node.selected,\r\n            },\r\n        };\r\n\r\n        if (node.state) {\r\n            nodeData.state.opened = node.state === 'open';\r\n            nodeData.children = true;\r\n        }\r\n\r\n        if (node.children) {\r\n            nodeData.children = [];\r\n            node.children.forEach((childNode) => {\r\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\r\n            });\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n\r\n    showProducts(navigate = true) {\r\n        this.$productListingContainer.removeClass('u-hidden');\r\n        this.$facetedSearchContainer.removeClass('u-hidden');\r\n        this.$contentResultsContainer.addClass('u-hidden');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-content-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action');\r\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        this.activateTab($('[data-product-results-toggle]'));\r\n\r\n        if (!navigate) {\r\n            return;\r\n        }\r\n\r\n        const searchData = $('#search-results-product-count span').data();\r\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\r\n            page: 1,\r\n        });\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    showContent(navigate = true) {\r\n        this.$contentResultsContainer.removeClass('u-hidden');\r\n        this.$productListingContainer.addClass('u-hidden');\r\n        this.$facetedSearchContainer.addClass('u-hidden');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-product-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action');\r\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        this.activateTab($('[data-content-results-toggle]'));\r\n\r\n        if (!navigate) {\r\n            return;\r\n        }\r\n\r\n        const searchData = $('#search-results-content-count span').data();\r\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\r\n            page: 1,\r\n        });\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    activateTab($tabToActivate) {\r\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\r\n\r\n        $tabsCollection.each((idx, tab) => {\r\n            const $tab = $(tab);\r\n\r\n            if ($tab.is($tabToActivate)) {\r\n                $tab.removeAttr('tabindex');\r\n                $tab.attr('aria-selected', true);\r\n                return;\r\n            }\r\n\r\n            $tab.attr('tabindex', '-1');\r\n            $tab.attr('aria-selected', false);\r\n        });\r\n    }\r\n\r\n    onTabChangeWithArrows(event) {\r\n        const eventKey = event.which;\r\n        const isLeftOrRightArrowKeydown = eventKey === leftArrowKey\r\n            || eventKey === rightArrowKey;\r\n        if (!isLeftOrRightArrowKeydown) return;\r\n\r\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\r\n\r\n        const isActiveElementNotTab = $tabsCollection.index($(document.activeElement)) === -1;\r\n        if (isActiveElementNotTab) return;\r\n\r\n        const $activeTab = $(`#${document.activeElement.id}`);\r\n        const activeTabIdx = $tabsCollection.index($activeTab);\r\n        const lastTabIdx = $tabsCollection.length - 1;\r\n\r\n        let nextTabIdx;\r\n        switch (eventKey) {\r\n        case leftArrowKey:\r\n            nextTabIdx = activeTabIdx === 0 ? lastTabIdx : activeTabIdx - 1;\r\n            break;\r\n        case rightArrowKey:\r\n            nextTabIdx = activeTabIdx === lastTabIdx ? 0 : activeTabIdx + 1;\r\n            break;\r\n        default: break;\r\n        }\r\n\r\n        $($tabsCollection.get(nextTabIdx)).focus().trigger('click');\r\n    }\r\n\r\n    onReady() {\r\n        compareProducts(this.context.urls);\r\n        this.arrangeFocusOnSortBy();\r\n\r\n        const $searchForm = $('[data-advanced-search-form]');\r\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\r\n        const url = Url.parse(window.location.href, true);\r\n        const treeData = [];\r\n        this.$productListingContainer = $('#product-listing-container');\r\n        this.$facetedSearchContainer = $('#faceted-search-container');\r\n        this.$contentResultsContainer = $('#search-results-content');\r\n\r\n        // Init faceted search\r\n        if ($('#facetedSearch').length > 0) {\r\n            this.initFacetedSearch();\r\n        } else {\r\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        $('[data-product-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showProducts();\r\n        });\r\n\r\n        $('[data-content-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showContent();\r\n        });\r\n\r\n        $('[data-search-page-tabs]').on('keyup', this.onTabChangeWithArrows);\r\n\r\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\r\n            this.showContent(false);\r\n        } else {\r\n            this.showProducts(false);\r\n        }\r\n\r\n        const validator = this.initValidation($searchForm)\r\n            .bindValidation($searchForm.find('#search_query_adv'));\r\n\r\n        this.context.categoryTree.forEach((node) => {\r\n            treeData.push(this.formatCategoryTreeForJSTree(node));\r\n        });\r\n\r\n        this.categoryTreeData = treeData;\r\n        this.createCategoryTree($categoryTreeContainer);\r\n\r\n        $searchForm.on('submit', event => {\r\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\r\n\r\n            if (!validator.check()) {\r\n                return event.preventDefault();\r\n            }\r\n\r\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\r\n\r\n            for (const categoryId of selectedCategoryIds) {\r\n                const input = $('<input>', {\r\n                    type: 'hidden',\r\n                    name: 'category[]',\r\n                    value: categoryId,\r\n                });\r\n\r\n                $searchForm.append(input);\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            $('[data-search-aria-message]').removeClass('u-hidden');\r\n        }, 100);\r\n    }\r\n\r\n    loadTreeNodes(node, cb) {\r\n        $.ajax({\r\n            url: '/remote/v1/category-tree',\r\n            data: {\r\n                selectedCategoryId: node.id,\r\n                prefix: 'category',\r\n            },\r\n            headers: {\r\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\r\n            },\r\n        }).done(data => {\r\n            const formattedResults = [];\r\n\r\n            data.forEach((dataNode) => {\r\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\r\n            });\r\n\r\n            cb(formattedResults);\r\n        });\r\n    }\r\n\r\n    createCategoryTree($container) {\r\n        const treeOptions = {\r\n            core: {\r\n                data: (node, cb) => {\r\n                    // Root node\r\n                    if (node.id === '#') {\r\n                        cb(this.categoryTreeData);\r\n                    } else {\r\n                        // Lazy loaded children\r\n                        this.loadTreeNodes(node, cb);\r\n                    }\r\n                },\r\n                themes: {\r\n                    icons: true,\r\n                },\r\n            },\r\n            checkbox: {\r\n                three_state: false,\r\n            },\r\n            plugins: [\r\n                'checkbox',\r\n            ],\r\n        };\r\n\r\n        $container.jstree(treeOptions);\r\n    }\r\n\r\n    initFacetedSearch() {\r\n        // eslint-disable-next-line object-curly-newline\r\n        const { onMinPriceError, onMaxPriceError, minPriceNotEntered, maxPriceNotEntered, onInvalidPrice } = this.context;\r\n        const $productListingContainer = $('#product-listing-container');\r\n        const $contentListingContainer = $('#search-results-content');\r\n        const $facetedSearchContainer = $('#faceted-search-container');\r\n        const $searchHeading = $('#search-results-heading');\r\n        const $searchCount = $('#search-results-product-count');\r\n        const $contentCount = $('#search-results-content-count');\r\n        const productsPerPage = this.context.searchProductsPerPage;\r\n        const requestOptions = {\r\n            template: {\r\n                productListing: 'search/product-listing',\r\n                contentListing: 'search/content-listing',\r\n                sidebar: 'search/sidebar',\r\n                heading: 'search/heading',\r\n                productCount: 'search/product-count',\r\n                contentCount: 'search/content-count',\r\n            },\r\n            config: {\r\n                product_results: {\r\n                    limit: productsPerPage,\r\n                },\r\n            },\r\n            showMore: 'search/show-more',\r\n        };\r\n\r\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\r\n            $searchHeading.html(content.heading);\r\n\r\n            const url = Url.parse(window.location.href, true);\r\n            if (url.query.section === 'content') {\r\n                $contentListingContainer.html(content.contentListing);\r\n                $contentCount.html(content.contentCount);\r\n                this.showContent(false);\r\n            } else {\r\n                $productListingContainer.html(content.productListing);\r\n                $facetedSearchContainer.html(content.sidebar);\r\n                $searchCount.html(content.productCount);\r\n                this.showProducts(false);\r\n            }\r\n\r\n            $('body').triggerHandler('compareReset');\r\n\r\n            $('html, body').animate({\r\n                scrollTop: 0,\r\n            }, 100);\r\n        }, {\r\n            validationErrorMessages: {\r\n                onMinPriceError,\r\n                onMaxPriceError,\r\n                minPriceNotEntered,\r\n                maxPriceNotEntered,\r\n                onInvalidPrice,\r\n            },\r\n        });\r\n    }\r\n\r\n    initValidation($form) {\r\n        this.$form = $form;\r\n        this.validator = nod({\r\n            submit: $form,\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    bindValidation($element) {\r\n        if (this.validator) {\r\n            this.validator.add({\r\n                selector: $element,\r\n                validate: 'presence',\r\n                errorMessage: $element.data('errorMessage'),\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    check() {\r\n        if (this.validator) {\r\n            this.validator.performCheck();\r\n            return this.validator.areAll('valid');\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","const forms = {\r\n    email(value) {\r\n        const re = /^.+@.+\\..+/;\r\n        return re.test(value);\r\n    },\r\n\r\n    /**\r\n     * Validates a password field\r\n     * @param value\r\n     * @returns {boolean}\r\n     */\r\n    password(value) {\r\n        return this.notEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * validates if a field is empty\r\n     * @param value\r\n     * @returns {boolean}\r\n     *\r\n     */\r\n    notEmpty(value) {\r\n        return value.length > 0;\r\n    },\r\n};\r\n\r\nexport default forms;\r\n","import _ from 'lodash';\r\nimport nod from '../nod';\r\nimport forms from '../models/forms';\r\n\r\nconst inputTagNames = [\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n];\r\n/**\r\n * Set up Object with Error Messages on Password Validation. Please use messages in mentioned order\r\n * @param {string} empty defines error text for empty field\r\n * @param {string} confirm defines error text for empty confirmation field\r\n * @param {string} mismatch defines error text if confirm passford mismatches passford field\r\n * @param {string} invalid defines error text for invalid password charaters sequence\r\n * @return {object} messages or default texts if nothing is providing\r\n */\r\nexport const createPasswordValidationErrorTextObject = (empty, confirm, mismatch, invalid) => ({\r\n    onEmptyPasswordErrorText: empty,\r\n    onConfirmPasswordErrorText: confirm,\r\n    onMismatchPasswordErrorText: mismatch,\r\n    onNotValidPasswordErrorText: invalid,\r\n});\r\n\r\n\r\n/**\r\n * Apply class name to an input element on its type\r\n * @param {object} input\r\n * @param {string} formFieldClass\r\n * @return {object} Element itself\r\n */\r\nfunction classifyInput(input, formFieldClass) {\r\n    const $input = $(input);\r\n    const $formField = $input.parent(`.${formFieldClass}`);\r\n    const tagName = $input.prop('tagName').toLowerCase();\r\n\r\n    let className = `${formFieldClass}--${tagName}`;\r\n    let specificClassName;\r\n\r\n    // Input can be text/checkbox/radio etc...\r\n    if (tagName === 'input') {\r\n        const inputType = $input.prop('type');\r\n\r\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\r\n            // ie: .form-field--checkbox, .form-field--radio\r\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\r\n        } else {\r\n            // ie: .form-field--input .form-field--inputText\r\n            specificClassName = `${className}${_.capitalize(inputType)}`;\r\n        }\r\n    }\r\n\r\n    // Apply class modifier\r\n    return $formField\r\n        .addClass(className)\r\n        .addClass(specificClassName);\r\n}\r\n\r\n/**\r\n * Apply class name to each input element in a form based on its type\r\n * @example\r\n * // Before\r\n * <form id=\"form\">\r\n *     <div class=\"form-field\">\r\n *         <input type=\"text\">\r\n *     </div>\r\n *     <div class=\"form-field\">\r\n *         <select>...</select>\r\n *     </div>\r\n * </form>\r\n *\r\n * classifyForm('#form', { formFieldClass: 'form-field' });\r\n *\r\n * // After\r\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\r\n * <div class=\"form-field form-field--select\">...</div>\r\n *\r\n * @param {string|object} formSelector - selector or element\r\n * @param {object} options\r\n * @return {jQuery} Element itself\r\n */\r\nexport function classifyForm(formSelector, options = {}) {\r\n    const $form = $(formSelector);\r\n    const $inputs = $form.find(inputTagNames.join(', '));\r\n\r\n    // Obtain options\r\n    const { formFieldClass = 'form-field' } = options;\r\n\r\n    // Classify each input in a form\r\n    $inputs.each((__, input) => {\r\n        classifyInput(input, formFieldClass);\r\n    });\r\n\r\n    return $form;\r\n}\r\n\r\n/**\r\n * Get id from given field\r\n * @param {object} $field JQuery field object\r\n * @return {string}\r\n */\r\nfunction getFieldId($field) {\r\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\r\n\r\n    if (fieldId && fieldId.length !== 0) {\r\n        return fieldId[0];\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\n/**\r\n * Insert hidden field after State/Province field\r\n * @param {object} $stateField JQuery field object\r\n */\r\nfunction insertStateHiddenField($stateField) {\r\n    const fieldId = getFieldId($stateField);\r\n    const stateFieldAttrs = {\r\n        type: 'hidden',\r\n        name: `FormFieldIsText${fieldId}`,\r\n        value: '1',\r\n    };\r\n\r\n    $stateField.after($('<input />', stateFieldAttrs));\r\n}\r\n\r\nconst Validators = {\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     * @param {string} errorText describes errorMassage on email validation\r\n     */\r\n    setEmailValidation: (validator, field, errorText) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: errorText,\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param validator\r\n     * @param passwordSelector\r\n     * @param password2Selector\r\n     * @param requirements\r\n     * @param {object} errorTextsObject\r\n     * @param isOptional\r\n     */\r\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, {\r\n        onEmptyPasswordErrorText, onConfirmPasswordErrorText, onMismatchPasswordErrorText, onNotValidPasswordErrorText,\r\n    }, isOptional) => {\r\n        const $password = $(passwordSelector);\r\n        const passwordValidations = [\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: onEmptyPasswordErrorText,\r\n            },\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.match(new RegExp(requirements.alpha))\r\n                        && val.match(new RegExp(requirements.numeric))\r\n                        && val.length >= requirements.minlength;\r\n\r\n                    // If optional and nothing entered, it is valid\r\n                    if (isOptional && val.length === 0) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: onNotValidPasswordErrorText,\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: onConfirmPasswordErrorText,\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val === $password.val();\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: onMismatchPasswordErrorText,\r\n            },\r\n        ];\r\n\r\n        validator.add(passwordValidations);\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param {Nod} validator\r\n     * @param {Object} selectors\r\n     * @param {string} selectors.errorSelector\r\n     * @param {string} selectors.fieldsetSelector\r\n     * @param {string} selectors.formSelector\r\n     * @param {string} selectors.maxPriceSelector\r\n     * @param {string} selectors.minPriceSelector\r\n     */\r\n    setMinMaxPriceValidation: (validator, selectors, priceValidationErrorTexts = {}) => {\r\n        const {\r\n            errorSelector,\r\n            fieldsetSelector,\r\n            formSelector,\r\n            maxPriceSelector,\r\n            minPriceSelector,\r\n        } = selectors;\r\n\r\n        // eslint-disable-next-line object-curly-newline\r\n        const { onMinPriceError, onMaxPriceError, minPriceNotEntered, maxPriceNotEntered, onInvalidPrice } = priceValidationErrorTexts;\r\n\r\n        validator.configure({\r\n            form: formSelector,\r\n            preventSubmit: true,\r\n            successClass: '_', // KLUDGE: Don't apply success class\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: onMinPriceError,\r\n            selector: minPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: onMaxPriceError,\r\n            selector: maxPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: maxPriceNotEntered,\r\n            selector: maxPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: minPriceNotEntered,\r\n            selector: minPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: onInvalidPrice,\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            validate: 'min-number:0',\r\n        });\r\n\r\n        validator.setMessageOptions({\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            parent: fieldsetSelector,\r\n            errorSpan: errorSelector,\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setStateCountryValidation: (validator, field, errorText) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: 'presence',\r\n                errorMessage: errorText,\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes classes from dirty form if previously checked\r\n     * @param field\r\n     */\r\n    cleanUpStateValidation: (field) => {\r\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\r\n\r\n        Object.keys(nod.classes).forEach((value) => {\r\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\r\n                $fieldClassElement.removeClass(nod.classes[value]);\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nexport { Validators, insertStateHiddenField };\r\n","import { showAlertModal } from './modal';\r\n\r\nfunction decrementCounter(counter, item) {\r\n    const index = counter.indexOf(item);\r\n\r\n    if (index > -1) {\r\n        counter.splice(index, 1);\r\n    }\r\n}\r\n\r\nfunction incrementCounter(counter, item) {\r\n    counter.push(item);\r\n}\r\n\r\nfunction updateCounterNav(counter, $link, urlContext) {\r\n    if (counter.length !== 0) {\r\n        if (!$link.is('visible')) {\r\n            $link.addClass('show');\r\n        }\r\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\r\n        $link.find('span.countPill').html(counter.length);\r\n    } else {\r\n        $link.removeClass('show');\r\n    }\r\n}\r\n\r\nexport default function (urlContext) {\r\n    let compareCounter = [];\r\n\r\n    const $compareLink = $('a[data-compare-nav]');\r\n\r\n    $('body').on('compareReset', () => {\r\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        compareCounter = $checked.length ? $checked.map((index, element) => element.value).get() : [];\r\n        updateCounterNav(compareCounter, $compareLink, urlContext);\r\n    });\r\n\r\n    $('body').triggerHandler('compareReset');\r\n\r\n    $('body').on('click', '[data-compare-id]', event => {\r\n        const product = event.currentTarget.value;\r\n        const $clickedCompareLink = $('a[data-compare-nav]');\r\n\r\n        if (event.currentTarget.checked) {\r\n            incrementCounter(compareCounter, product);\r\n        } else {\r\n            decrementCounter(compareCounter, product);\r\n        }\r\n\r\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\r\n    });\r\n\r\n    $('body').on('submit', '[data-product-compare]', event => {\r\n        const $this = $(event.currentTarget);\r\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if (productsToCompare.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    $('body').on('click', 'a[data-compare-nav]', () => {\r\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if ($clickedCheckedInput.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            return false;\r\n        }\r\n    });\r\n}\r\n","import PageManager from './page-manager';\r\nimport urlUtils from './common/utils/url-utils';\r\nimport Url from 'url';\r\n\r\nexport default class CatalogPage extends PageManager {\r\n    constructor(context) {\r\n        super(context);\r\n\r\n        window.addEventListener('beforeunload', () => {\r\n            if (document.activeElement.id === 'sort') {\r\n                window.localStorage.setItem('sortByStatus', 'selected');\r\n            }\r\n        });\r\n    }\r\n\r\n    arrangeFocusOnSortBy() {\r\n        const $sortBySelector = $('[data-sort-by=\"product\"] #sort');\r\n\r\n        if (window.localStorage.getItem('sortByStatus')) {\r\n            $sortBySelector.focus();\r\n            window.localStorage.removeItem('sortByStatus');\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event, currentTarget) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\r\n    }\r\n}\r\n","import { hooks, api } from '@bigcommerce/stencil-utils';\r\nimport _ from 'lodash';\r\nimport Url from 'url';\r\nimport urlUtils from './utils/url-utils';\r\nimport modalFactory from '../global/modal';\r\nimport collapsibleFactory from './collapsible';\r\nimport { Validators } from './utils/form-utils';\r\nimport nod from './nod';\r\n\r\nconst defaultOptions = {\r\n    accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\r\n    blockerSelector: '#facetedSearch .blocker',\r\n    clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\r\n    componentSelector: '#facetedSearch-navList',\r\n    facetNavListSelector: '#facetedSearch .navList',\r\n    priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\r\n    priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\r\n    priceRangeFormSelector: '#facet-range-form',\r\n    priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\r\n    priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\r\n    showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\r\n    facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\r\n    modal: modalFactory('#modal')[0],\r\n    modalOpen: false,\r\n};\r\n\r\n/**\r\n * Faceted search view component\r\n */\r\nclass FacetedSearch {\r\n    /**\r\n     * @param {object} requestOptions - Object with options for the ajax requests\r\n     * @param {function} callback - Function to execute after fetching templates\r\n     * @param {object} options - Configurable options\r\n     * @example\r\n     *\r\n     * let requestOptions = {\r\n     *      templates: {\r\n     *          productListing: 'category/product-listing',\r\n     *          sidebar: 'category/sidebar'\r\n     *     }\r\n     * };\r\n     *\r\n     * let templatesDidLoad = function(content) {\r\n     *     $productListingContainer.html(content.productListing);\r\n     *     $facetedSearchContainer.html(content.sidebar);\r\n     * };\r\n     *\r\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\r\n     */\r\n    constructor(requestOptions, callback, options) {\r\n        // Private properties\r\n        this.requestOptions = requestOptions;\r\n        this.callback = callback;\r\n        this.options = _.extend({}, defaultOptions, options);\r\n        this.collapsedFacets = [];\r\n        this.collapsedFacetItems = [];\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Show limited items by default\r\n        $(this.options.facetNavListSelector).each((index, navList) => {\r\n            this.collapseFacetItems($(navList));\r\n        });\r\n\r\n        // Mark initially collapsed accordions\r\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n            if (collapsible.isCollapsed) {\r\n                this.collapsedFacets.push(collapsible.targetId);\r\n            }\r\n        });\r\n\r\n        // Collapse all facets if initially hidden\r\n        // NOTE: Need to execute after Collapsible gets bootstrapped\r\n        setTimeout(() => {\r\n            if ($(this.options.componentSelector).is(':hidden')) {\r\n                this.collapseAllFacets();\r\n            }\r\n        });\r\n\r\n        // Observe user events\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n        this.onToggleClick = this.onToggleClick.bind(this);\r\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\r\n        this.onClearFacet = this.onClearFacet.bind(this);\r\n        this.onFacetClick = this.onFacetClick.bind(this);\r\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\r\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n        this.filterFacetItems = this.filterFacetItems.bind(this);\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    // Public methods\r\n    refreshView(content) {\r\n        if (content) {\r\n            this.callback(content);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Restore view state\r\n        this.restoreCollapsedFacets();\r\n        this.restoreCollapsedFacetItems();\r\n\r\n        // Bind events\r\n        this.bindEvents();\r\n    }\r\n\r\n    updateView() {\r\n        $(this.options.blockerSelector).show();\r\n\r\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\r\n            $(this.options.blockerSelector).hide();\r\n\r\n            if (err) {\r\n                throw new Error(err);\r\n            }\r\n\r\n            // Refresh view with new content\r\n            this.refreshView(content);\r\n        });\r\n    }\r\n\r\n    expandFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Remove\r\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n    }\r\n\r\n    collapseFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n        const hasMoreResults = $navList.data('hasMoreResults');\r\n\r\n        if (hasMoreResults) {\r\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\r\n        } else {\r\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n        }\r\n    }\r\n\r\n    toggleFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Toggle depending on `collapsed` flag\r\n        if (_.includes(this.collapsedFacetItems, id)) {\r\n            this.getMoreFacetResults($navList);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    getMoreFacetResults($navList) {\r\n        const facet = $navList.data('facet');\r\n        const facetUrl = urlUtils.getUrl();\r\n\r\n        if (this.requestOptions.showMore) {\r\n            api.getPage(facetUrl, {\r\n                template: this.requestOptions.showMore,\r\n                params: {\r\n                    list_all: facet,\r\n                },\r\n            }, (err, response) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                this.options.modal.open();\r\n                this.options.modalOpen = true;\r\n                this.options.modal.updateContent(response);\r\n            });\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    filterFacetItems(event) {\r\n        const $items = $('.navList-item');\r\n        const query = $(event.currentTarget).val().toLowerCase();\r\n\r\n        $items.each((index, element) => {\r\n            const text = $(element).text().toLowerCase();\r\n            if (text.indexOf(query) !== -1) {\r\n                $(element).show();\r\n            } else {\r\n                $(element).hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    expandFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.open();\r\n    }\r\n\r\n    collapseFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.close();\r\n    }\r\n\r\n    collapseAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.collapseFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    expandAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.expandFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    // Private methods\r\n    initPriceValidator() {\r\n        if ($(this.options.priceRangeFormSelector).length === 0) {\r\n            return;\r\n        }\r\n\r\n        const validator = nod();\r\n        const selectors = {\r\n            errorSelector: this.options.priceRangeErrorSelector,\r\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\r\n            formSelector: this.options.priceRangeFormSelector,\r\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\r\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\r\n        };\r\n\r\n        Validators.setMinMaxPriceValidation(validator, selectors, this.options.validationErrorMessages);\r\n\r\n        this.priceRangeValidator = validator;\r\n    }\r\n\r\n    restoreCollapsedFacetItems() {\r\n        const $navLists = $(this.options.facetNavListSelector);\r\n\r\n        // Restore collapsed state for each facet\r\n        $navLists.each((index, navList) => {\r\n            const $navList = $(navList);\r\n            const id = $navList.attr('id');\r\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacetItems($navList);\r\n            } else {\r\n                this.expandFacetItems($navList);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreCollapsedFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n            const id = collapsible.targetId;\r\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacet($accordionToggle);\r\n            } else {\r\n                this.expandFacet($accordionToggle);\r\n            }\r\n        });\r\n    }\r\n\r\n    bindEvents() {\r\n        // Clean-up\r\n        this.unbindEvents();\r\n\r\n        // DOM events\r\n        $(window).on('statechange', this.onStateChange);\r\n        $(window).on('popstate', this.onPopState);\r\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    unbindEvents() {\r\n        // DOM events\r\n        $(window).off('statechange', this.onStateChange);\r\n        $(window).off('popstate', this.onPopState);\r\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    onClearFacet(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onToggleClick(event) {\r\n        const $toggle = $(event.currentTarget);\r\n        const $navList = $($toggle.attr('href'));\r\n\r\n        // Prevent default\r\n        event.preventDefault();\r\n\r\n        // Toggle visible items\r\n        this.toggleFacetItems($navList);\r\n    }\r\n\r\n    onFacetClick(event, currentTarget) {\r\n        const $link = $(currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n\r\n        $link.toggleClass('is-selected');\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n\r\n        if (this.options.modalOpen) {\r\n            this.options.modal.close();\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event, currentTarget) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\r\n        const urlQueryParams = {};\r\n        Object.assign(urlQueryParams, url.query);\r\n\r\n        event.preventDefault();\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\r\n    }\r\n\r\n    onRangeSubmit(event, currentTarget) {\r\n        event.preventDefault();\r\n\r\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\r\n            return;\r\n        }\r\n\r\n        const url = Url.parse(window.location.href, true);\r\n        let queryParams = decodeURI($(currentTarget).serialize()).split('&');\r\n        queryParams = urlUtils.parseQueryParams(queryParams);\r\n\r\n        for (const key in queryParams) {\r\n            if (queryParams.hasOwnProperty(key)) {\r\n                url.query[key] = queryParams[key];\r\n            }\r\n        }\r\n\r\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\r\n        const urlQueryParams = {};\r\n        Object.assign(urlQueryParams, url.query);\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\r\n    }\r\n\r\n    onStateChange() {\r\n        this.updateView();\r\n    }\r\n\r\n    onAccordionToggle(event) {\r\n        const $accordionToggle = $(event.currentTarget);\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n        const id = collapsible.targetId;\r\n\r\n        if (collapsible.isCollapsed) {\r\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\r\n        } else {\r\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\r\n        }\r\n    }\r\n\r\n    onPopState() {\r\n        const currentUrl = window.location.href;\r\n        const searchParams = new URLSearchParams(currentUrl);\r\n        // If searchParams does not contain a page value then modify url query string to have page=1\r\n        if (!searchParams.has('page')) {\r\n            const linkUrl = $('.pagination-link').attr('href');\r\n            const re = /page=[0-9]+/i;\r\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\r\n            window.history.replaceState({}, document.title, updatedLinkUrl);\r\n        }\r\n        $(window).trigger('statechange');\r\n    }\r\n}\r\n\r\nexport default FacetedSearch;\r\n"],"sourceRoot":""}